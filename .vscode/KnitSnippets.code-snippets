{
	"Separator": {
		"prefix": "Lua -> Separator",
		"body": [
			"-- ===========================================================================",
			"-- ${0}",
			"-- ===========================================================================",
		],
		"description": "Basic template for creating separators in Lua"
	},
	"Knit Base": {
		"prefix": "Lua -> Knit Base",
		"body": [
			"-- ===========================================================================",
			"-- Roblox Services",
			"-- ===========================================================================",
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"",
			"-- ===========================================================================",
			"-- Dependencies",
			"-- ===========================================================================",
			"local Packages = ReplicatedStorage.Packages",
			"local Knit = require(Packages.Knit)"
		],
		"description": "Template for creating a Knit base"
	},
	"Class Module": {
		"prefix": [
			"Lua -> Class Module"
		],
		"body": [
			"-- ===========================================================================",
			"-- Roblox Services",
			"-- ===========================================================================",
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"",
			"-- ===========================================================================",
			"-- Dependencies",
			"-- ===========================================================================",
			"local Packages = ReplicatedStorage.Packages",
			"local Knit = require(Packages.Knit)",
			"local Trove = require(Packages.Trove)",
			"",
			"-- ===========================================================================",
			"-- Variables",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Class Methods",
			"-- ===========================================================================",
			"local ${0:$TM_FILENAME_BASE} = {}",
			"${0:$TM_FILENAME_BASE}.__index = ${0:$TM_FILENAME_BASE}",
			"",
			"--[[",
			"\tInitializes the constructor.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}.new()",
			"\tlocal self = setmetatable({",
			"\t\t_trove = Trove.new()",
			"}, ${0:$TM_FILENAME_BASE})",
			"\t",
			"\treturn self",
			"end",
			"",
			"--[[",
			"\tRuns upon the module being destroyed.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:Destroy()",
			"\tself._trove:Destroy()",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}"
		],
		"description": "Templating for creating a Knit Module"
	},
	"Knit Service": {
		"prefix": [
			"Lua -> Knit Service"
		],
		"body": [
			"-- ===========================================================================",
			"-- Roblox Services",
			"-- ===========================================================================",
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"",
			"-- ===========================================================================",
			"-- Dependencies",
			"-- ===========================================================================",
			"local Packages = ReplicatedStorage.Packages",
			"local Knit = require(Packages.Knit)",
			"",
			"-- ===========================================================================",
			"-- Variables",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Services",
			"-- ===========================================================================",
			"local ${0:$TM_FILENAME_BASE} = Knit.CreateService({",
			"\tName = \"${0:$TM_FILENAME_BASE}\",",
			"\tClient = {},",
			"})",
			"",
			"-- ===========================================================================",
			"-- Internal Methods",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Public Methods",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Knit Initialization",
			"-- ===========================================================================",
			"--[[",
			"\tInitializes the service.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:KnitInit()",
			"\tprint(\"${0:$TM_FILENAME_BASE} initialized\")",
			"end",
			"",
			"--[[",
			"\tStarts the service.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:KnitStart()",
			"\tprint(\"${0:$TM_FILENAME_BASE} started\")",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}"
		],
		"description": "Template for creating a Knit Service"
	},
	"Knit Controller": {
		"prefix": [
			"Lua -> Knit Controller"
		],
		"body": [
			"-- ===========================================================================",
			"-- Roblox Services",
			"-- ===========================================================================",
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"",
			"-- ===========================================================================",
			"-- Dependencies",
			"-- ===========================================================================",
			"local Packages = ReplicatedStorage.Packages",
			"local Knit = require(Packages.Knit)",
			"",
			"-- ===========================================================================",
			"-- Variables",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Controllers",
			"-- ===========================================================================",
			"local ${0:$TM_FILENAME_BASE} = Knit.CreateController({",
			"\tName = \"${0:$TM_FILENAME_BASE}\",",
			"})",
			"",
			"-- ===========================================================================",
			"-- Internal Methods",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Public Methods",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Knit Initialization",
			"-- ===========================================================================",
			"--[[",
			"\tInitializes the controller.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:KnitInit()",
			"\tprint(\"${0:$TM_FILENAME_BASE} initialized\")",
			"end",
			"",
			"--[[",
			"\tStarts the controller.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:KnitStart()",
			"\tprint(\"${0:$TM_FILENAME_BASE} started\")",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}"
		],
		"description": "Template for creating a Knit Controller"
	},
	"Knit Component": {
		"prefix": [
			"Lua -> Knit Component"
		],
		"body": [
			"-- ===========================================================================",
			"-- Roblox Services",
			"-- ===========================================================================",
			"local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")",
			"",
			"-- ===========================================================================",
			"-- Dependencies",
			"-- ===========================================================================",
			"local Packages = ReplicatedStorage.Packages",
			"local Component = require(Packages.Component)",
			"local Trove = require(Packages.Trove)",
			"",
			"-- ===========================================================================",
			"-- Variables",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Components",
			"-- ===========================================================================",
			"local ${0:$TM_FILENAME_BASE} = Component.new({",
			"\tTag = \"\",",
			"\tAncestors = {",
			"\t\tworkspace,",
			"\t},",
			"\tExtensions = {},",
			"})",
			"",
			"-- ===========================================================================",
			"-- Internal Methods",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Public Methods",
			"-- ===========================================================================",
			"",
			"-- ===========================================================================",
			"-- Component Initialization",
			"-- ===========================================================================",
			"--[[",
			"\tConstruct is called before the component is started.",
			"\tIt should be used to construct the component instance.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:Construct()",
			"\tself._trove = Trove.new()",
			"end",
			"",
			"--[[",
			"\tStart is called when the component is started.",
			"\tAt this point in time, it is safe to grab other components also bound to the same instance.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:Start()",
			"\tlocal instance = self.Instance",
			"end",
			"",
			"--[[",
			"\tStop is called when the component is stopped.",
			"\tThis is called when the bound instance is removed from the whitelisted ancestors or when the tag is removed from the instance.",
			"]]",
			"function ${0:$TM_FILENAME_BASE}:Stop()",
			"\tprint(\"${0:$TM_FILENAME_BASE} stopped\")",
			"\tself._trove:Destroy()",
			"end",
			"",
			"return ${0:$TM_FILENAME_BASE}"
		],
		"description": "Template for creating a Knit Component"
	},
}